services:
  app:
    container_name: myapp-next
    image: myapp-next:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - myapp-network
    entrypoint: ["/bin/sh", "./entrypoint.sh"]


  prisma-studio:
    container_name: myapp-prisma-studio
    image: myapp-prisma-studio:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
      target: prisma-studio
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - myapp-network

  db:
    image: postgres:16-alpine
    container_name: myapp-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - myapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: myapp-postgres-data

networks:
  myapp-network:
    name: myapp-network
    driver: bridge
